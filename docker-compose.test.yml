services:
  server:
    container_name: server
    hostname: localhost
    image: t1mon1106/scheduler:${TAG}
    ports:
      - "8080:8080"
    environment:
      - RUST_LOG=debug
    networks:
      - postgres
    depends_on:
      - postgres

  postgres:
    container_name: postgres_container
    image: postgres:16.2-alpine3.18
    hostname: localhost
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: "schedulerdb"
      POSTGRES_USER: "scheduler"
      POSTGRES_PASSWORD: "scheduler"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - scheduler-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scheduler -d schedulerdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 2G
    networks:
      - postgres

  http-to-sql:
    container_name: http-to-sql
    hostname: localhost
    image: t1mon1106/http_to_sql
    ports:
      - "4545:4545"
    environment:
      DB_USER: scheduler
      DB_PASSWORD: scheduler
      DB_HOST: postgres_container
      DB_PORT: 5432
      DB_NAME: schedulerdb
    networks:
      - postgres
    depends_on:
      - postgres

volumes:
  scheduler-data:
  pgadmin-data:

networks:
  postgres:
    driver: bridge
