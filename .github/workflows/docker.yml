---
name: Test,Build

on: [push]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4
      - name: Setup | Rust
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable
          components: clippy
      - name: Build | Lint | Test
        run: |
          cargo clippy
          cargo test

  security-audit:
    name: security-audit
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4
      - name: Setup | Rust
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable
      - name: Build | Compile
        run: |
          cargo install cargo-audit
          cargo audit

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: self-hosted
    timeout-minutes: 180
    needs: [test]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: t1mon1106/scheduler

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }},t1mon1106/scheduler:latest
          labels: ${{ steps.meta.outputs.labels }}

  e2e:
    name: e2e tests
    runs-on: ubuntu-latest
    needs: [push_to_registry]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: run-compose with tests
        uses: isbang/compose-action@v1.5.1
        with:
          compose-file: "tests/e2e/docker-compose.yml"
          up-flags: "--abort-on-container-exit"
        env:
          TAG: ${{ github.ref_name }}

  smoke-performance:
    name: smoke-performance
    runs-on: ubuntu-latest
    needs: [push_to_registry]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: run-compose with tests
        env:
          TAG: ${{ github.ref_name }}
        run: cd tests/performance && docker-compose run k6s run /scripts/perf_test.js --quiet

  api-security-check:
    name: api-security-check
    runs-on: ubuntu-latest
    needs: [push_to_registry]
    steps:
      - name: Create network
        run: docker network create zapnet

      - name: Start target
        env:
          TAG: ${{ github.ref_name }}
        run: docker run -d -p 8080:8080 --network zapnet t1mon1106/scheduler:${TAG}

      - name: Run scan
        run: docker run --user root --network zapnet -v $HOME:/zap/wrk/:rw -t owasp/zap2docker-stable zap-api-scan.py -t http://$(ip -f inet -o addr show docker0 | awk '{print $4}' | cut -d '/' -f 1):8080/openapi.json -f openapi -r report.html
